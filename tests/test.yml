---
- hosts: all

  pre_tasks:

    - name: TRAVIS TEST | Ensure multiverse repo is enabled
      apt_repository:
        repo: "{{item}}"
        update_cache: false
      register: multiverse_installed
      when: ansible_distribution == 'Ubuntu'
      with_items:
        - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
        - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
        - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'
        - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'

    - apt:
        update_cache: true
      when: multiverse_installed is changed

    - name: TRAVIS TEST | Ensure build dependencies are installed (RedHat)
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - "@Development tools"
        - tar
        - unzip
        - sudo
        - which
      when: ansible_os_family == 'RedHat'

  vars:
    letsencrypt_cert_domains:
      - www.example.com
      - www.example2.com
    letsencrypt_command: "{{ letsencrypt_path }} -n --agree-tos {% if letsencrypt_rsa_key_size is defined %}--rsa-key-size {{ letsencrypt_rsa_key_size }}{% endif %} --text {% for domain in letsencrypt_cert_domains %}-d {{ domain }} {% endfor %}{% if letsencrypt_no_email is defined %}--register-unsafely-without-email{% else %}--email {{ letsencrypt_email }}{% endif %} --expand --dry-run"

  roles:
    - {
        role: role_under_test,
        docker_test: true,
        letsencrypt_email: admin@example.com,
        letsencrypt_server: "https://acme-staging.api.letsencrypt.org/directory",
      }

